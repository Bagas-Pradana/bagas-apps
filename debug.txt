/------------------------------------------------------------------------------------------------/File test.js

    // Likes
    // document.addEventListener('click', function(event) {
    // if (event.target.closest('.like-button')) { // Pastikan tombol yang diklik adalah tombol like
    //     let button = event.target.closest('.like-button'); // Ambil tombol yang diklik
    //     let postId = button.getAttribute('data-id');
    //     let likeCountElement = button.querySelector('.like-count');

    //     fetch(`/like/${postId}`, {
    //         method: 'POST',
    //         headers: {
    //             'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
    //             'Content-Type': 'application/json'
    //         }
    //     })
    //     .then(response => response.json())
    //     .then(data => {
    //         console.log('Response dari server:', data);
    //         if (data.message === 'Berhasil like') {
    //             likeCountElement.textContent = data.likes; // Update jumlah like
    //         }
    //     })
    //     .catch(error => console.error('Error:', error));
    // }
    // });

    // window.onload = function () {
    //     document.addEventListener('click', function (event) {
    //         // Pastikan klik terjadi di dalam tombol dengan class 'like-button'
    //         let button = event.target.closest('.like-button'); // Mencari tombol terdekat
    //         if (!button) return; // Jika tidak ada, keluar dari fungsi

    //         let postId = button.getAttribute('data-id');
    //         let likeCountElement = button.querySelector('.like-count');

    //         console.log(`Tombol ID: ${postId}, Elemen like-count:`, likeCountElement);

    //         if (!likeCountElement) {
    //             console.error(`❌ Tidak ditemukan .like-count dalam tombol ${postId}`);
    //             return;
    //         }

    //         fetch(`/get-likes/${postId}`)
    //             .then(response => response.json())
    //             .then(data => {
    //                 console.log(`Likes dari server untuk Post ID ${postId}:`, data.likes);
    //                 likeCountElement.textContent = data.likes ?? 0; // Jika null, ubah ke 0
    //             })
    //             .catch(error => console.error('❌ Error mengambil jumlah like:', error));
    //     });
    // };




//
//
        // document.addEventListener('click', function(event) {
        //     let button = event.target.closest('.like-button'); // Mendeteksi tombol yang diklik
        //     if (button) {
        //         let postId = button.getAttribute('data-id');
        //         let likeCountElement = button.querySelector('.like-count');
        //         console.log('Tombol Like Ditekan!', postId); // Debugging

        //         fetch(`/like/${postId}`, {
        //             method: 'POST',
        //             headers: {
        //                 'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
        //                 'Content-Type': 'application/json'
        //             }
        //         })
        //         .then // public function likePostingan($id) {
    //     // $postingan = Postingan::findOrFail($id);
    //     // return response()->json($postingan); // Debugging

    //     $postingan = Postingan::findOrFail($id);
    //     // $user = Auth::user();

    //     // Simpan like ke database (pastikan user sudah login)
    //     $like = new Like();
    //     $like->postingan_id = $postingan->id;
    //     $like->user_id = auth()->id();
    //     $like->save();

    //     // Hitung jumlah like yang ada di postingan ini
    //     $totalLikes = Like::where('postingan_id', $postingan->id)->count();

    //     return response()->json([
    //         'message' => 'Berhasil like',
    //         'likes' => $totalLikes
    //     ]);
    // }

     // $postingan = Postingan::findOrFail($id);
        // $user = Auth::user();

        // // Cek apakah User sudah Cek seblemnya
        // if ($postingan->like()->where('user_id', $user->id)->exists()){
        //     return response()->json(['message' => 'Sudah Like'], 400);
        // }

        // //Simpan data Like ke Database

        // $postingan->like()->create(['user_id' => $user->id]);
        // return response()->json(['message' => 'Berhasil Like']);





    // public function store(Postingan $postingan)
    //     {
    //         // // Simpan like ke database (pastikan tabel likes ada)
    //         // $like = new Like();
    //         // $like->postingan_id = $postingan->id;
    //         // $like->user_id = auth()->id(); // Pastikan user sudah login
    //         // $like->save();

    //         // return response()->json([
    //         //     'message' => 'Berhasil like',
    //         //     'likes' => $postingan->likes()->count()
    //         // ]);

    //         dd($postingan);
    //     }(response => {
        //             console.log('Response Status:', response.status);
        //             return response.json();
        //         })
        //         .then(data => {
        //             console.log('Response Data:', data);
        //         })
        //         .catch(error => console.error('Fetch Error:', error));
        //     }
        // });


        //    // Update isi popup dengan jumlah like dari server
        //    popupContent.querySelector('#judul').innerText = data.judul;

        // <h2 class="text-4xl font-bold text-slate-900">${data.judul}</h2>
        //             <h2 class="text-xl font-semibold text-slate-900">
        //                 By: <a class="text-blue-500 font-bold underline" href="/listuser/${data.author.username}">${data.author.name}</a>
        //                 | Category: <a href="/blog?category=${data.category.slug}" class="text-blue-500 font-bold underline">${data.category.nama_kategory}</a>
        //             </h2>
        //             ${imageHTML}
        //             <p class="text-justify text-xl text-slate-900">${data.body}</p>
        //             <button class="like-button text-xl font-semibold px-3 pt-0.5 pb-1 bg-blue-600 inline-flex items-center gap-2 rounded-lg text-white w-[15%]" data-id="${data.id}">
        //                 <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        //                     <path stroke-linecap="round" stroke-linejoin="round" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
        //                 </svg>
        //                 <span class="like-count">0</span> likes
        //             </button>
        //             `;

   // Event delegation untuk tombol like (baik di halaman utama maupun dalam popup)
//    document.addEventListener('click', function (event) {
//     let button = event.target.closest('.like-button, .like-button2');
//     if (!button) return;

//     let postId = button.getAttribute('data-id');
//     // let postId = '3433';
//     let likeCountElement = button.querySelector('.like-count, .like-count2');

//     // Cek apakah user sudah login
//     let isAuthenticated = document.querySelector('meta[name="is-authenticated"]').getAttribute('content');

//     if (isAuthenticated === "false") {
//         Swal.fire({
//             title: "Akses Ditolak!",
//             text: "Anda harus login terlebih dahulu.",
//             icon: "error",
//             confirmButtonText: "OK",
//             customClass: {
//                 popup: 'custom-swal-popup'
//             }
//         }).then(() => {
//             window.location.href = '/login'; // Redirect setelah OK ditekan
//         });
//     }

//     fetch(`/like/${postId}`, {
//         method: 'POST',
//         headers: {
//             'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content'),
//             'Content-Type': 'application/json',
//             'Accept': 'application/json' // Wajib untuk memastikan respons JSON
//         }
//     })
//     .then(response => response.json())
//     .then(data => {
//         console.log('✅ Response dari server:', data);
//         if (data.message === 'Berhasil like' || data.message === 'Unlike berhasil') {
//             likeCountElement.textContent = data.likes;
//         }
//     })
//     .catch(error => console.error('❌ Error:', error));
// });

// });




/------------------------------------------------------------------------------------------------/File LikeController
 // public function likePostingan($id) {
    //     // $postingan = Postingan::findOrFail($id);
    //     // return response()->json($postingan); // Debugging

    //     $postingan = Postingan::findOrFail($id);
    //     // $user = Auth::user();

    //     // Simpan like ke database (pastikan user sudah login)
    //     $like = new Like();
    //     $like->postingan_id = $postingan->id;
    //     $like->user_id = auth()->id();
    //     $like->save();

    //     // Hitung jumlah like yang ada di postingan ini
    //     $totalLikes = Like::where('postingan_id', $postingan->id)->count();

    //     return response()->json([
    //         'message' => 'Berhasil like',
    //         'likes' => $totalLikes
    //     ]);
    // }

     // $postingan = Postingan::findOrFail($id);
        // $user = Auth::user();

        // // Cek apakah User sudah Cek seblemnya
        // if ($postingan->like()->where('user_id', $user->id)->exists()){
        //     return response()->json(['message' => 'Sudah Like'], 400);
        // }

        // //Simpan data Like ke Database

        // $postingan->like()->create(['user_id' => $user->id]);
        // return response()->json(['message' => 'Berhasil Like']);





    // public function store(Postingan $postingan)
    //     {
    //         // // Simpan like ke database (pastikan tabel likes ada)
    //         // $like = new Like();
    //         // $like->postingan_id = $postingan->id;
    //         // $like->user_id = auth()->id(); // Pastikan user sudah login
    //         // $like->save();

    //         // return response()->json([
    //         //     'message' => 'Berhasil like',
    //         //     'likes' => $postingan->likes()->count()
    //         // ]);

    //         dd($postingan);
    //     }






    // public function likePostingan($id) {
    //     $postingan = Postingan::findOrFail($id);
    //     $user = Auth::user();

    //     // Cek apakah user sudah like postingan ini
    //     $existingLike = Like::where('postingan_id', $postingan->id)
    //                         ->where('user_id', $user->id)
    //                         ->first();

    //     if ($existingLike) {
    //         // Jika sudah like, hapus like (unlike)
    //         $existingLike->delete();
    //         return response()->json([
    //             'message' => 'Unlike berhasil',
    //             'likes' => $postingan->likes()->count()
    //         ]);
    //     }

    //     Like::create([
    //         'postingan_ida' => $postingan->id,
    //         'user_id' => $user->id
    //     ]);
    //     // try {
    //     //     DB::beginTransaction();
    //     //     Like::create([
    //     //         'postingan_ida' => $postingan->id,
    //     //         'user_id' => $user->id
    //     //     ]);
    //     //     DB::commit();

    //     //     return response()->json([
    //     //         'message' => 'Berhasil like',
    //     //         'likes' => $postingan->likes()->count()
    //     //     ]);
    //     // } catch (\Throwable $th) {
    //     //     DB::rollBack();
    //     //     Log::error('Error', [
    //     //         'message' => $th->getMessage(),
    //     //         'file' => $th->getFile(),
    //     //         'line' => $th->getLine(),
    //     //         'trace' => $th->getTraceAsString(),
    //     //     ]);

    //     //     return response()->json([
    //     //         'message' => 'Gagal Like',
    //     //         // 'likes' => $postingan->likes()->count()
    //     //     ]);
    //     // }
    //     // Jika belum like, tambahkan like baru
    //     return response()->json([
    //         'message' => 'Berhasil like',
    //         'likes' => $postingan->likes()->count()
    //     ]);
